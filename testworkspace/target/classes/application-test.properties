# 引入配置文件
spring.profiles.active=log
server.port=8888
# 配置真实数据源
spring.shardingsphere.datasource.names=springboot0,springboot1

# 配置第 1 个数据源
#spring.shardingsphere.datasource.springboot0.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.springboot0.jdbc-url=jdbc:mysql://localhost:4806/springboot0?characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.springboot0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.springboot0.url=jdbc:mysql://localhost:4806/springboot0?characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.springboot0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.springboot0.username=root
spring.shardingsphere.datasource.springboot0.password=WEAVERemobile7!@#

# 配置第 2 个数据源
#spring.shardingsphere.datasource.springboot1.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.springboot1.jdbc-url=jdbc:mysql://localhost:4806/springboot1?characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.springboot1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.springboot1.url=jdbc:mysql://localhost:4806/springboot0?characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.springboot1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.springboot1.username=root
spring.shardingsphere.datasource.springboot1.password=WEAVERemobile7!@#

# 默认数据源，未分片的表默认执行库
spring.shardingsphere.sharding.default-data-source-name=springboot0

# 配置eb_msgpush_requestlog 表规则
spring.shardingsphere.sharding.tables.eb_msgpush_requestlog.actualDataNodes=springboot$->{0..1}.eb_msgpush_requestlog2021_0$->{3..4}

## 分片键
spring.shardingsphere.sharding.tables.eb_msgpush_requestlog.databaseStrategy.standard.shardingColumn=tenant_key
## 自定义 分库 算法：ClassName 为自定义算法类
spring.shardingsphere.sharding.tables.eb_msgpush_requestlog.databaseStrategy.standard.preciseAlgorithmClassName=com.example.algorithm.MyPreciseDBShardingAlgorithm

# 分表策略
## 分片键
spring.shardingsphere.sharding.tables.eb_msgpush_requestlog.tableStrategy.standard.shardingColumn=tenant_key
## 自定义 分库 算法：ClassName 为自定义算法类
spring.shardingsphere.sharding.tables.eb_msgpush_requestlog.tableStrategy.standard.preciseAlgorithmClassName=com.example.algorithm.MyPreciseTableShardingAlgorithm

# 打印执行的数据库以及语句
spring.shardingsphere.props.sql.show=true

#mybatis
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.mapperLocations=classpath:mapper/*.xml


# 配置分表策略
#spring.shardingsphere.rules.sharding.tables.eb_msgpush_requestlog.table-strategy.standard.sharding-column=create_time
#spring.shardingsphere.rules.sharding.tables.eb_msgpush_requestlog.table-strategy.standard.sharding-algorithm-name=table_inline
#spring.shardingsphere.sharding.tables.t_user.databaseStrategy.standard.shardingColumn=create_time
#spring.shardingsphere.sharding.tables.eb_msgpush_requestlog.databaseStrategy.standard.preciseAlgorithmClassName=com.example.algorithm.TableShardingAlgorithm


#spring.shardingsphere.rules.sharding.sharding-algorithms.table_inline.type=CLASS_BASED
#spring.shardingsphere.rules.sharding.sharding-algorithms.table_inline.props.algorithmClassName=com.example.algorithm.TableShardingAlgorithm

